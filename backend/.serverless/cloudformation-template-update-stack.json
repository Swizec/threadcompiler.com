{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "AuthLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-custom-authorizer-auth0-swizec-dev-auth"
      }
    },
    "PublicEndpointLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-custom-authorizer-auth0-swizec-dev-publicEndpoint"
      }
    },
    "PrivateEndpointLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-custom-authorizer-auth0-swizec-dev-privateEndpoint"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "swizec-dev",
                  "aws-custom-authorizer-auth0",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-custom-authorizer-auth0-swizec-dev-auth:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-custom-authorizer-auth0-swizec-dev-publicEndpoint:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-custom-authorizer-auth0-swizec-dev-privateEndpoint:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-custom-authorizer-auth0-swizec-dev-auth:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-custom-authorizer-auth0-swizec-dev-publicEndpoint:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-custom-authorizer-auth0-swizec-dev-privateEndpoint:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "aws-custom-authorizer-auth0",
              "swizec-dev",
              "us-west-2",
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "AuthLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-custom-authorizer-auth0/swizec-dev/1550902356544-2019-02-23T06:12:36.544Z/aws-custom-authorizer-auth0.zip"
        },
        "FunctionName": "aws-custom-authorizer-auth0-swizec-dev-auth",
        "Handler": "handler.auth",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "AUTH0_CLIENT_ID": "qFnKgffxd1egZwn4FaTqCD17x4XuBDDJ",
            "AUTH0_CLIENT_PUBLIC_KEY": "-----BEGIN CERTIFICATE-----\r\nMIIDCzCCAfOgAwIBAgIJY7bABD60laE/MA0GCSqGSIb3DQEBCwUAMCMxITAfBgNV\r\nBAMTGHRocmVhZGNvbXBpbGVyLmF1dGgwLmNvbTAeFw0xOTAxMTUwMDIwNDZaFw0z\r\nMjA5MjMwMDIwNDZaMCMxITAfBgNVBAMTGHRocmVhZGNvbXBpbGVyLmF1dGgwLmNv\r\nbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKg7kphD+mXP1CZODPtZ\r\nggYWISkKC4tbhYzJm6mKR/vAM61lK5CEkhCAy5WeMWqKLgMyyOIPQ7h7E05v3db/\r\nSr6CnN2AMdbVhN2y4RWVgunYfEXRd7kNnTM+o9/zCECm7pClIGiiO/UfqOIe/l5X\r\nC/v6Drocvauk+53psHVa184BjHm/romTEMcNE1szbDBjrEm0WIwkh7536TMTtP4S\r\n594kqCXDqOVmus1ufyBjgxNNheGD2HCODwNNwktsUc1uDjJ7WULm+w2NY1MdwWdY\r\nteFkaCSO0vOWYjoifNknXz8EJZyX0DzlfbY/KxCM3MEbKnRcUSuwhguzrnTMM9mI\r\nlncCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUdTbKafloYtze\r\nKkkMlHlqK6+tXQEwDgYDVR0PAQH/BAQDAgKEMA0GCSqGSIb3DQEBCwUAA4IBAQCh\r\nIZbi8CgI6myvml093PZhINmNBgFcqjXjDtcmaHcEV6Pijr2w20xVbo6j7GQu3cDJ\r\n862TBMMwVmgFETxq8Tr/ADiZHWN6m3so1O4WNz2RNH1rgzWiTwUrwA1pSsVQpta+\r\neQ45bubpC9wzrbku50Uu0VaZsBAMZKxvx8D6EItANeEzYlUdNyDdzcaijWL1YVnJ\r\nRFxpQKo1ie46bnmGumMH/AgeJaWryaeBvMZGo7wSVFQcPk+SEZOjdxlaaEkqzdPW\r\nq34xFU3Ldskl4zxfxHHsMwS58v0AUkcukT+BSC95puRdcADoRl9Htg035M+KmQsZ\r\ndS++M+W/B7YV9QlIeQVO\r\n-----END CERTIFICATE-----",
            "AUTH0_MGMT_CLIENT_ID": "u52yBEMCsXbQtRJcpYWvmBHLb3fa7CmL",
            "AUTH0_MGMT_CLIENT_SECRET": "u8jZ8yrddxo-6gxF2unSmXGKNsZnkB8EIqvR95LRqLEMWJymTDapMJR6RzV4ioFJ",
            "TWITTER_CONSUMER_KEY": "LU7QHNPV2FLijK1T2gGTEU1aj",
            "TWITTER_CONSUMER_SECRET": "sZtmPjKdXFxXbhRFZpgGo69kRJoL9gLbDgaED3ofSNHTlNkOXB"
          }
        }
      },
      "DependsOn": [
        "AuthLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AuthLambdaVersionoBpAMYWb8S7LaDXparAwJXZEszSiphCEt9SucKKCY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AuthLambdaFunction"
        },
        "CodeSha256": "Idk2zd/z0HJwfgGmz+eehTJcVXABU/HuU8NodT6eJsE="
      }
    },
    "PublicEndpointLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-custom-authorizer-auth0/swizec-dev/1550902356544-2019-02-23T06:12:36.544Z/aws-custom-authorizer-auth0.zip"
        },
        "FunctionName": "aws-custom-authorizer-auth0-swizec-dev-publicEndpoint",
        "Handler": "handler.publicEndpoint",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "AUTH0_CLIENT_ID": "qFnKgffxd1egZwn4FaTqCD17x4XuBDDJ",
            "AUTH0_CLIENT_PUBLIC_KEY": "-----BEGIN CERTIFICATE-----\r\nMIIDCzCCAfOgAwIBAgIJY7bABD60laE/MA0GCSqGSIb3DQEBCwUAMCMxITAfBgNV\r\nBAMTGHRocmVhZGNvbXBpbGVyLmF1dGgwLmNvbTAeFw0xOTAxMTUwMDIwNDZaFw0z\r\nMjA5MjMwMDIwNDZaMCMxITAfBgNVBAMTGHRocmVhZGNvbXBpbGVyLmF1dGgwLmNv\r\nbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKg7kphD+mXP1CZODPtZ\r\nggYWISkKC4tbhYzJm6mKR/vAM61lK5CEkhCAy5WeMWqKLgMyyOIPQ7h7E05v3db/\r\nSr6CnN2AMdbVhN2y4RWVgunYfEXRd7kNnTM+o9/zCECm7pClIGiiO/UfqOIe/l5X\r\nC/v6Drocvauk+53psHVa184BjHm/romTEMcNE1szbDBjrEm0WIwkh7536TMTtP4S\r\n594kqCXDqOVmus1ufyBjgxNNheGD2HCODwNNwktsUc1uDjJ7WULm+w2NY1MdwWdY\r\nteFkaCSO0vOWYjoifNknXz8EJZyX0DzlfbY/KxCM3MEbKnRcUSuwhguzrnTMM9mI\r\nlncCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUdTbKafloYtze\r\nKkkMlHlqK6+tXQEwDgYDVR0PAQH/BAQDAgKEMA0GCSqGSIb3DQEBCwUAA4IBAQCh\r\nIZbi8CgI6myvml093PZhINmNBgFcqjXjDtcmaHcEV6Pijr2w20xVbo6j7GQu3cDJ\r\n862TBMMwVmgFETxq8Tr/ADiZHWN6m3so1O4WNz2RNH1rgzWiTwUrwA1pSsVQpta+\r\neQ45bubpC9wzrbku50Uu0VaZsBAMZKxvx8D6EItANeEzYlUdNyDdzcaijWL1YVnJ\r\nRFxpQKo1ie46bnmGumMH/AgeJaWryaeBvMZGo7wSVFQcPk+SEZOjdxlaaEkqzdPW\r\nq34xFU3Ldskl4zxfxHHsMwS58v0AUkcukT+BSC95puRdcADoRl9Htg035M+KmQsZ\r\ndS++M+W/B7YV9QlIeQVO\r\n-----END CERTIFICATE-----",
            "AUTH0_MGMT_CLIENT_ID": "u52yBEMCsXbQtRJcpYWvmBHLb3fa7CmL",
            "AUTH0_MGMT_CLIENT_SECRET": "u8jZ8yrddxo-6gxF2unSmXGKNsZnkB8EIqvR95LRqLEMWJymTDapMJR6RzV4ioFJ",
            "TWITTER_CONSUMER_KEY": "LU7QHNPV2FLijK1T2gGTEU1aj",
            "TWITTER_CONSUMER_SECRET": "sZtmPjKdXFxXbhRFZpgGo69kRJoL9gLbDgaED3ofSNHTlNkOXB"
          }
        }
      },
      "DependsOn": [
        "PublicEndpointLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "PublicEndpointLambdaVersionVUwSL7inlKGlKe3WM0NPpXJE12pEQqfGzREvw7Id8IQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PublicEndpointLambdaFunction"
        },
        "CodeSha256": "Idk2zd/z0HJwfgGmz+eehTJcVXABU/HuU8NodT6eJsE="
      }
    },
    "PrivateEndpointLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-custom-authorizer-auth0/swizec-dev/1550902356544-2019-02-23T06:12:36.544Z/aws-custom-authorizer-auth0.zip"
        },
        "FunctionName": "aws-custom-authorizer-auth0-swizec-dev-privateEndpoint",
        "Handler": "handler.privateEndpoint",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "AUTH0_CLIENT_ID": "qFnKgffxd1egZwn4FaTqCD17x4XuBDDJ",
            "AUTH0_CLIENT_PUBLIC_KEY": "-----BEGIN CERTIFICATE-----\r\nMIIDCzCCAfOgAwIBAgIJY7bABD60laE/MA0GCSqGSIb3DQEBCwUAMCMxITAfBgNV\r\nBAMTGHRocmVhZGNvbXBpbGVyLmF1dGgwLmNvbTAeFw0xOTAxMTUwMDIwNDZaFw0z\r\nMjA5MjMwMDIwNDZaMCMxITAfBgNVBAMTGHRocmVhZGNvbXBpbGVyLmF1dGgwLmNv\r\nbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKg7kphD+mXP1CZODPtZ\r\nggYWISkKC4tbhYzJm6mKR/vAM61lK5CEkhCAy5WeMWqKLgMyyOIPQ7h7E05v3db/\r\nSr6CnN2AMdbVhN2y4RWVgunYfEXRd7kNnTM+o9/zCECm7pClIGiiO/UfqOIe/l5X\r\nC/v6Drocvauk+53psHVa184BjHm/romTEMcNE1szbDBjrEm0WIwkh7536TMTtP4S\r\n594kqCXDqOVmus1ufyBjgxNNheGD2HCODwNNwktsUc1uDjJ7WULm+w2NY1MdwWdY\r\nteFkaCSO0vOWYjoifNknXz8EJZyX0DzlfbY/KxCM3MEbKnRcUSuwhguzrnTMM9mI\r\nlncCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUdTbKafloYtze\r\nKkkMlHlqK6+tXQEwDgYDVR0PAQH/BAQDAgKEMA0GCSqGSIb3DQEBCwUAA4IBAQCh\r\nIZbi8CgI6myvml093PZhINmNBgFcqjXjDtcmaHcEV6Pijr2w20xVbo6j7GQu3cDJ\r\n862TBMMwVmgFETxq8Tr/ADiZHWN6m3so1O4WNz2RNH1rgzWiTwUrwA1pSsVQpta+\r\neQ45bubpC9wzrbku50Uu0VaZsBAMZKxvx8D6EItANeEzYlUdNyDdzcaijWL1YVnJ\r\nRFxpQKo1ie46bnmGumMH/AgeJaWryaeBvMZGo7wSVFQcPk+SEZOjdxlaaEkqzdPW\r\nq34xFU3Ldskl4zxfxHHsMwS58v0AUkcukT+BSC95puRdcADoRl9Htg035M+KmQsZ\r\ndS++M+W/B7YV9QlIeQVO\r\n-----END CERTIFICATE-----",
            "AUTH0_MGMT_CLIENT_ID": "u52yBEMCsXbQtRJcpYWvmBHLb3fa7CmL",
            "AUTH0_MGMT_CLIENT_SECRET": "u8jZ8yrddxo-6gxF2unSmXGKNsZnkB8EIqvR95LRqLEMWJymTDapMJR6RzV4ioFJ",
            "TWITTER_CONSUMER_KEY": "LU7QHNPV2FLijK1T2gGTEU1aj",
            "TWITTER_CONSUMER_SECRET": "sZtmPjKdXFxXbhRFZpgGo69kRJoL9gLbDgaED3ofSNHTlNkOXB"
          }
        }
      },
      "DependsOn": [
        "PrivateEndpointLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "PrivateEndpointLambdaVersionR5H8dcDAVALj0yoAuqiWm3kM6fIuuDINNwzmr7KLnyw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PrivateEndpointLambdaFunction"
        },
        "CodeSha256": "Idk2zd/z0HJwfgGmz+eehTJcVXABU/HuU8NodT6eJsE="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "swizec-dev-aws-custom-authorizer-auth0",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceApi": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "api",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceApiPublic": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceApi"
        },
        "PathPart": "public",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceApiPrivate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceApi"
        },
        "PathPart": "private",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodApiPublicOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceApiPublic"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodApiPrivateOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceApiPrivate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodApiPublicPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceApiPublic"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PublicEndpointLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodApiPrivatePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceApiPrivate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PrivateEndpointLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": "AuthApiGatewayAuthorizer"
    },
    "AuthApiGatewayAuthorizer": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "auth",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "AuthLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "Type": "TOKEN"
      }
    },
    "ApiGatewayDeployment1550902356652": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "swizec-dev"
      },
      "DependsOn": [
        "ApiGatewayMethodApiPublicOptions",
        "ApiGatewayMethodApiPrivateOptions",
        "ApiGatewayMethodApiPublicPost",
        "ApiGatewayMethodApiPrivatePost"
      ]
    },
    "PublicEndpointLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PublicEndpointLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "PrivateEndpointLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PrivateEndpointLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AuthLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AuthLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        }
      }
    },
    "GatewayResponse": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseType": "EXPIRED_TOKEN",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StatusCode": "401"
      }
    },
    "AuthFailureGatewayResponse": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseType": "UNAUTHORIZED",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StatusCode": "401"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "AuthLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AuthLambdaVersionoBpAMYWb8S7LaDXparAwJXZEszSiphCEt9SucKKCY"
      }
    },
    "PublicEndpointLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PublicEndpointLambdaVersionVUwSL7inlKGlKe3WM0NPpXJE12pEQqfGzREvw7Id8IQ"
      }
    },
    "PrivateEndpointLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PrivateEndpointLambdaVersionR5H8dcDAVALj0yoAuqiWm3kM6fIuuDINNwzmr7KLnyw"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.us-west-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/swizec-dev"
          ]
        ]
      }
    }
  }
}